# -*- coding: utf-8 -*-
import sqlite3

import pandas as pd
# Form implementation generated from reading ui file 'Interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QDropEvent, QDragEnterEvent
from PyQt5.QtWidgets import QTableWidgetItem

from Graph import GraphWindow


class Ui_Title(object):
    def setupUi(self, Title):
        Title.setObjectName("Title")
        Title.setWindowModality(QtCore.Qt.WindowModal)
        Title.resize(1341, 853)
        Title.setStyleSheet("background-color: rgb(188, 188, 188)")
        self.centralwidget = QtWidgets.QWidget(Title)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 1351, 841))
        self.frame.setStyleSheet("background-color: rgb(188, 188, 188)")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setProperty("ddd", "")
        self.frame.setObjectName("frame")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setEnabled(True)
        self.label_2.setGeometry(QtCore.QRect(300, 10, 851, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Black")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setFocusPolicy(QtCore.Qt.NoFocus)
        self.label_2.setStyleSheet("")
        self.label_2.setObjectName("label_2")
        self.scrollArea = QtWidgets.QScrollArea(self.frame)
        self.scrollArea.setEnabled(True)
        self.scrollArea.setGeometry(QtCore.QRect(20, 410, 1301, 401))
        self.scrollArea.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1299, 399))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_5 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_5.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        spacerItem = QtWidgets.QSpacerItem(0, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.verticalLayout.addItem(spacerItem)
        self.tableWidget = QtWidgets.QTableWidget(self.scrollAreaWidgetContents)
        self.tableWidget.setEnabled(True)
        self.tableWidget.setStyleSheet("background-color: rgb(236, 234, 234);\n"
                                       "font: 75 8pt \"MS Shell Dlg 2\";\n"
                                       "")
        self.tableWidget.setAutoScrollMargin(16)
        self.tableWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.tableWidget.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(12)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(11, item)
        self.verticalLayout.addWidget(self.tableWidget)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalFrame = QtWidgets.QFrame(self.frame)
        self.verticalFrame.setEnabled(True)
        self.verticalFrame.setGeometry(QtCore.QRect(470, 120, 431, 281))
        self.verticalFrame.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.verticalFrame.setObjectName("verticalFrame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalFrame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.verticalFrame)
        self.label.setEnabled(True)
        self.label.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.listWidget = QtWidgets.QListWidget(self.verticalFrame)
        self.listWidget.setEnabled(True)
        self.listWidget.setStyleSheet("background-color: rgb(235, 235, 235)")
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout_2.addWidget(self.listWidget)
        self.pushButton_2 = QtWidgets.QPushButton(self.verticalFrame)
        self.pushButton_2.setEnabled(True)
        self.pushButton_2.setStyleSheet("font: 87 11pt \"Arial\";\n"
                                        "background-color: rgb(69, 255, 84);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout_2.addWidget(self.pushButton_2)
        self.widget_3 = QtWidgets.QWidget(self.frame)
        self.widget_3.setEnabled(True)
        self.widget_3.setGeometry(QtCore.QRect(20, 240, 451, 161))
        self.widget_3.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.widget_3.setObjectName("widget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.widget_3)
        self.radioButton_3.setEnabled(True)
        self.radioButton_3.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
        self.radioButton_3.setObjectName("radioButton_3")
        self.gridLayout_2.addWidget(self.radioButton_3, 1, 0, 1, 1)
        self.radioButton_2 = QtWidgets.QRadioButton(self.widget_3)
        self.radioButton_2.setEnabled(True)
        self.radioButton_2.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
        self.radioButton_2.setObjectName("radioButton_2")
        self.gridLayout_2.addWidget(self.radioButton_2, 0, 1, 1, 1)
        self.radioButton_5 = QtWidgets.QRadioButton(self.widget_3)
        self.radioButton_5.setEnabled(True)
        self.radioButton_5.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
        self.radioButton_5.setObjectName("radioButton_5")
        self.gridLayout_2.addWidget(self.radioButton_5, 2, 0, 1, 1)
        self.radioButton_6 = QtWidgets.QRadioButton(self.widget_3)
        self.radioButton_6.setEnabled(True)
        self.radioButton_6.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
        self.radioButton_6.setObjectName("radioButton_6")
        self.gridLayout_2.addWidget(self.radioButton_6, 2, 1, 1, 1)
        self.radioButton = QtWidgets.QRadioButton(self.widget_3)
        self.radioButton.setEnabled(True)
        self.radioButton.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
        self.radioButton.setObjectName("radioButton")
        self.gridLayout_2.addWidget(self.radioButton, 1, 1, 1, 1)
        self.radioButton_4 = QtWidgets.QRadioButton(self.widget_3)
        self.radioButton_4.setEnabled(True)
        self.radioButton_4.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
        self.radioButton_4.setObjectName("radioButton_4")
        self.gridLayout_2.addWidget(self.radioButton_4, 0, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 2, 0, 1, 2)
        self.dateEdit = QtWidgets.QDateEdit(self.widget_3)
        self.dateEdit.setEnabled(True)
        self.dateEdit.setDateTime(QtCore.QDateTime(QtCore.QDate(2023, 1, 1), QtCore.QTime(0, 0, 0)))
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setObjectName("dateEdit")
        self.gridLayout_3.addWidget(self.dateEdit, 1, 1, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_3.setStyleSheet("font: 87 11pt \"Arial\";\n"
                                        "gridline-color: rgb(100, 79, 69);\n"
                                        "background-color: rgb(69, 255, 84);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_3.addWidget(self.pushButton_3, 3, 0, 1, 2)
        self.label_4 = QtWidgets.QLabel(self.widget_3)
        self.label_4.setEnabled(True)
        self.label_4.setObjectName("label_4")
        self.gridLayout_3.addWidget(self.label_4, 1, 0, 1, 1)
        self.widget_2 = QtWidgets.QWidget(self.frame)
        self.widget_2.setGeometry(QtCore.QRect(900, 240, 421, 161))
        self.widget_2.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.widget = QtWidgets.QWidget(self.widget_2)
        self.widget.setEnabled(True)
        self.widget.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setEnabled(True)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setEnabled(True)
        self.pushButton.setStyleSheet("font: 87 11pt \"Arial\";\n"
                                      "background-color: rgb(69, 255, 84);")
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout_4.addWidget(self.widget)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.checkBox_3 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_3.setEnabled(True)
        self.checkBox_3.setChecked(True)
        self.checkBox_3.setObjectName("checkBox_3")
        self.gridLayout.addWidget(self.checkBox_3, 0, 1, 1, 1)
        self.checkBox_5 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_5.setEnabled(True)
        self.checkBox_5.setChecked(True)
        self.checkBox_5.setObjectName("checkBox_5")
        self.gridLayout.addWidget(self.checkBox_5, 1, 0, 1, 1)
        self.checkBox_11 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_11.setEnabled(True)
        self.checkBox_11.setChecked(True)
        self.checkBox_11.setObjectName("checkBox_11")
        self.gridLayout.addWidget(self.checkBox_11, 3, 1, 1, 1)
        self.checkBox_2 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_2.setEnabled(True)
        self.checkBox_2.setChecked(True)
        self.checkBox_2.setObjectName("checkBox_2")
        self.gridLayout.addWidget(self.checkBox_2, 3, 0, 1, 1)
        self.checkBox_6 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_6.setEnabled(True)
        self.checkBox_6.setChecked(True)
        self.checkBox_6.setObjectName("checkBox_6")
        self.gridLayout.addWidget(self.checkBox_6, 0, 2, 1, 1)
        self.checkBox_10 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_10.setEnabled(True)
        self.checkBox_10.setChecked(True)
        self.checkBox_10.setObjectName("checkBox_10")
        self.gridLayout.addWidget(self.checkBox_10, 0, 0, 1, 1)
        self.checkBox_8 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_8.setEnabled(True)
        self.checkBox_8.setChecked(True)
        self.checkBox_8.setObjectName("checkBox_8")
        self.gridLayout.addWidget(self.checkBox_8, 2, 2, 1, 1)
        self.checkBox_4 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_4.setEnabled(True)
        self.checkBox_4.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.checkBox_4.setChecked(True)
        self.checkBox_4.setObjectName("checkBox_4")
        self.gridLayout.addWidget(self.checkBox_4, 1, 1, 1, 1)
        self.checkBox_7 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_7.setEnabled(True)
        self.checkBox_7.setChecked(True)
        self.checkBox_7.setObjectName("checkBox_7")
        self.gridLayout.addWidget(self.checkBox_7, 1, 2, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox.setEnabled(True)
        self.checkBox.setStyleSheet("background-color: rgb(216, 216, 216);")
        self.checkBox.setChecked(True)
        self.checkBox.setObjectName("checkBox")
        self.gridLayout.addWidget(self.checkBox, 2, 0, 1, 1)
        self.checkBox_12 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_12.setEnabled(True)
        self.checkBox_12.setChecked(True)
        self.checkBox_12.setObjectName("checkBox_12")
        self.gridLayout.addWidget(self.checkBox_12, 3, 2, 1, 1)
        self.checkBox_9 = QtWidgets.QCheckBox(self.widget_2)
        self.checkBox_9.setEnabled(True)
        self.checkBox_9.setChecked(True)
        self.checkBox_9.setObjectName("checkBox_9")
        self.gridLayout.addWidget(self.checkBox_9, 2, 1, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout)
        Title.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Title)
        self.statusbar.setObjectName("statusbar")
        Title.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(Title)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1341, 21))
        self.menuBar.setStyleSheet("background-color: rgb(194, 194, 194) ")
        self.menuBar.setObjectName("menuBar")
        self.menuSettings = QtWidgets.QMenu(self.menuBar)
        self.menuSettings.setStyleSheet("background-color: rgb(199, 226, 255)")
        self.menuSettings.setObjectName("menuSettings")
        Title.setMenuBar(self.menuBar)
        self.actionSave = QtWidgets.QAction(Title)
        self.actionSave.setObjectName("actionSave")
        self.actionQuit = QtWidgets.QAction(Title)
        self.actionQuit.setObjectName("actionQuit")
        self.menuSettings.addAction(self.actionSave)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionQuit)
        self.menuBar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(Title)
        QtCore.QMetaObject.connectSlotsByName(Title)

    def retranslateUi(self, Title):
        _translate = QtCore.QCoreApplication.translate
        Title.setWindowTitle(_translate("Title", "FinTrack Home"))
        self.label_2.setText(_translate("Title",
                                        "<html><head/><body><p align=\"center\"><span style=\" color:#009294;\">F</span><span style=\" color:#004343;\">in</span><span style=\" color:#006868;\">T</span><span style=\" color:#003232;\">rack</span><span style=\" color:#009294;\"/><span style=\" color:#ffffff;\">- </span><span style=\" color:#467dff;\">A</span><span style=\" color:#f9f9f9;\">N</span><span style=\" color:#45c0f9;\">Z </span><span style=\" color:#020608;\">Bank Statement Analysis Tool</span></p></body></html>"))
        self.label_5.setText(_translate("Title",
                                        "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; color:#0d0d0d;\">Your Purchase History</span></p></body></html>"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Title", "Transaction Date"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Title", "Processed Date"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Title", "Transaction Type"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Title", "Details"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Title", "Particulars"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Title", "Code"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Title", "Reference"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("Title", "Amount"))
        item = self.tableWidget.horizontalHeaderItem(8)
        item.setText(_translate("Title", "Balance"))
        item = self.tableWidget.horizontalHeaderItem(9)
        item.setText(_translate("Title", "To/From Account"))
        item = self.tableWidget.horizontalHeaderItem(10)
        item.setText(_translate("Title", "Conversion Charge"))
        item = self.tableWidget.horizontalHeaderItem(11)
        item.setText(_translate("Title", "Foreign Currency"))
        self.label.setText(_translate("Title",
                                      "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600; color:#15008f;\">Drop Bank Statement</span></p><p align=\"center\"><span style=\" font-size:12pt; color:#15008f;\">(Supported: .xlsx)</span></p></body></html>"))
        self.pushButton_2.setText(_translate("Title", "Submit"))

        self.radioButton_3.setText(_translate("Title", "Transaction Trends"))
        self.radioButton_2.setText(_translate("Title", "Monthly Transactions"))
        self.radioButton_5.setText(_translate("Title", "Balance Changes"))
        self.radioButton_6.setText(_translate("Title", "Delayed Transaction Trends"))
        self.radioButton.setText(_translate("Title", "Top Payment Methods"))
        self.radioButton_4.setText(_translate("Title", "Top Spending Categories"))
        self.pushButton_3.setText(_translate("Title", "Display Graph"))
        self.label_4.setText(_translate("Title",
                                        "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">Data Visualiaztion</span></p></body></html>"))
        self.label_3.setText(_translate("Title",
                                        "<html><head/><body><p align=\"right\"><span style=\" font-size:10pt; font-weight:600;\">Search:</span></p></body></html>"))
        self.pushButton.setText(_translate("Title", "View Results"))
        self.checkBox_3.setText(_translate("Title", "Particulars"))
        self.checkBox_5.setText(_translate("Title", "P. Date"))
        self.checkBox_11.setText(_translate("Title", "Amount"))
        self.checkBox_2.setText(_translate("Title", "Details"))
        self.checkBox_6.setText(_translate("Title", "Balance"))
        self.checkBox_10.setText(_translate("Title", "T. Date"))
        self.checkBox_8.setText(_translate("Title", "Coversion Charge"))
        self.checkBox_4.setText(_translate("Title", "Code"))
        self.checkBox_7.setText(_translate("Title", "To/From Account"))
        self.checkBox.setText(_translate("Title", "T. Type"))
        self.checkBox_12.setText(_translate("Title", "Foreign Currency "))
        self.checkBox_9.setText(_translate("Title", "References"))
        self.menuSettings.setTitle(_translate("Title", "File"))
        self.actionSave.setText(_translate("Title", "Save "))
        self.actionQuit.setText(_translate("Title", "Quit"))

        self.active_buttons()


    def active_buttons(self):
        self.press_submit()
        self.press_display_graph()
        self.control_table_columns()
        self.control_file_drag_drop()

    def press_display_graph(self):
        self.pushButton_3.clicked.connect(lambda: self.open_window())

    def press_submit(self):
        self.pushButton_2.clicked.connect(self.submit_button_clicked)

    def control_file_drag_drop(self):
        # Enable drag and drop
        self.listWidget.setAcceptDrops(True)
        self.listWidget.setDropIndicatorShown(True)
        # Connect the drag and drop signals
        self.listWidget.dragEnterEvent = self.dragEnterEvent
        self.listWidget.dragMoveEvent = self.dragMoveEvent
        self.listWidget.dropEvent = self.dropEvent

    def control_table_columns(self):
        checkBoxList = [self.checkBox_10, self.checkBox_5, self.checkBox, self.checkBox_2
            , self.checkBox_3, self.checkBox_4, self.checkBox_9, self.checkBox_11,
                        self.checkBox_6, self.checkBox_7, self.checkBox_8, self.checkBox_12]

        for i, check_box in enumerate(checkBoxList):
            check_box.clicked.connect(lambda state, index=i: self.toggle_column(state, index))

    def dragEnterEvent(self, event: QDragEnterEvent):
        mime_data = event.mimeData()
        if mime_data.hasUrls():
            event.acceptProposedAction()

    def dropEvent(self, event: QDropEvent):
        mime_data = event.mimeData()
        if mime_data.hasUrls():
            urls = mime_data.urls()
            for url in urls:
                if url.isLocalFile():
                    self.listWidget.addItem(url.toLocalFile())

    def dragMoveEvent(self, event):
        if event.mimeData().hasUrls():
            event.setDropAction(Qt.CopyAction)
            event.accept()
        else:
            event.ignore()

    def read_and_connect(self, path):
        # Read Excel data into a DataFrame
        df = pd.read_excel(path)
        # df['Item Type'] = df['Code'].apply(self.classify_transaction)
        # Create an in-memory SQLite database
        conn = sqlite3.connect(':memory:')
        df.to_sql('my_table', conn, index=False)
        return conn

    def submit_button_clicked(self):
        selected_item = self.listWidget.currentItem()
        if selected_item:
            file_path = selected_item.text()
            conn = self.read_and_connect(file_path)
            results = self.query_load_table(conn)
            self.populate_table(results)

    def query_load_table(self, conn):
        # Run SQL queries using pandas and SQLite
        query = '''SELECT * FROM my_table'''
        results = pd.read_sql_query(query, conn)
        return results

    def open_window(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = GraphWindow()
        self.ui.setupUi(self.window)
        self.ui.display_random_pie_chart()
        self.window.show()

    # Function to classify transactions
    def classify_transaction(self, code):
        # Your classification logic here
        # Return the corresponding item type based on the code
        # Example:
        category_mapping = {
            'KFC': 'Food',
            'Mcdo': 'Food',
            'Uber': 'Transportation',
            'Pak N Save': 'Groceries',
            'Caltex': 'Fuel',
            'Transfer': 'Transfer',
            # Add more keywords and their respective categories
        }
        for key, value in category_mapping.items():
            if key.lower() in code.lower():
                return value
        return '-'

    def toggle_column(self, state, col):
        if (state == True):
            self.tableWidget.setColumnHidden(col, False)  # 2 corresponds to Checked state
        else:
            self.tableWidget.setColumnHidden(col, True)  # 2 corresponds to Checked state

    def display_monthly_expenditures(self):
        selected_item = self.listWidget.currentItem()
        if selected_item:
            file_path = selected_item.text()
            conn = self.read_and_connect(file_path)
            query = '''SELECT "Code", COUNT(*) AS CodeCount
                FROM my_table
                GROUP BY "Code"
                ORDER BY CodeCount DESC
                LIMIT 12
            '''
            results = pd.read_sql_query(query, conn)
            conn.close()

    def populate_table(self, results):
        # Set the table widget dimensions
        num_rows, num_cols = results.shape
        self.tableWidget.setRowCount(num_rows)
        self.tableWidget.setColumnCount(num_cols)

        # Populate the QTableWidget
        for row_idx, row_data in enumerate(results.values):
            for col_idx, cell_data in enumerate(row_data):
                if (col_idx == 0 or col_idx == 1) and (cell_data is not None):
                    cell_data = cell_data.split()[0]

                item = QTableWidgetItem(str(cell_data))
                item.setTextAlignment(Qt.AlignCenter)
                self.tableWidget.setItem(row_idx, col_idx, item)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Title = QtWidgets.QMainWindow()
    ui = Ui_Title()
    ui.setupUi(Title)
    Title.show()
    sys.exit(app.exec_())
